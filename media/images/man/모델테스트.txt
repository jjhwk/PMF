{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "acf1dd84",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
    "from tensorflow.keras.applications.resnet50 import ResNet50\n",
    "from tensorflow.keras.layers import Dense, GlobalAveragePooling2D\n",
    "from tensorflow.keras.models import Model\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "from keras.callbacks import ModelCheckpoint"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5b78f254",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1s/step\n",
      "Predicted class: street\n"
     ]
    }
   ],
   "source": [
    "from keras.preprocessing import image\n",
    "import numpy as np\n",
    "from keras.models import load_model\n",
    "\n",
    "# 예측하려는 이미지 경로\n",
    "image_path = './4087023_17155591956110_500.jpg'\n",
    "\n",
    "# 모델 물러오기\n",
    "test_model = load_model(\"./model_data/best_model.keras\")\n",
    "\n",
    "# 이미지 불러오기 및 전처리\n",
    "img = image.load_img(image_path, target_size=(224, 224))\n",
    "img_array = image.img_to_array(img)\n",
    "img_array = np.expand_dims(img_array, axis=0)\n",
    "img_array = img_array / 255.0  # 이미지를 0과 1 사이로 정규화 (훈련할 때와 동일한 전처리)\n",
    "\n",
    "# 예측 생성\n",
    "predictions = test_model.predict(img_array)\n",
    "\n",
    "# 결과 해석\n",
    "predicted_class_index = np.argmax(predictions)\n",
    "class_labels = {'american': 0,    # 이부분만 바꿔줌\n",
    " 'casual': 1,\n",
    " 'chic': 2,\n",
    " 'dandy': 3,\n",
    " 'formal': 4,\n",
    " 'golf': 5,\n",
    " 'gorpcore': 6,\n",
    " 'sports': 7,\n",
    " 'street': 8}\n",
    "predicted_class_label = list(class_labels.keys())[list(class_labels.values()).index(predicted_class_index)]\n",
    "\n",
    "print(\"Predicted class:\", predicted_class_label)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "708a4ce8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
